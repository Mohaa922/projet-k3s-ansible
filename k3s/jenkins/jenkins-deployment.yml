# jenkins-deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: mjallouli-project1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      # Donne à Jenkins l'UID/GID 1000 sur le volume monté
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      # Fixe les droits si le partage NFS n'est pas déjà en 1000:1000
      initContainers:
      - name: fix-perms
        image: busybox:1.36
        command: ["sh","-c","chown -R 1000:1000 /var/jenkins_home || true"]
        volumeMounts:
        - name: jhome
          mountPath: /var/jenkins_home
      containers:
      - name: jenkins
        image: jenkins/jenkins:lts
        ports:
        - containerPort: 8080
        - containerPort: 50000
        env:
        - name: JENKINS_OPTS
          value: "--httpPort=8080"
        readinessProbe:
          httpGet: { path: /login, port: 8080 }
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 3
        livenessProbe:
          httpGet: { path: /login, port: 8080 }
          initialDelaySeconds: 90
          periodSeconds: 20
          timeoutSeconds: 3
        resources:
          requests:
            cpu: "250m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        volumeMounts:
        - name: jhome
          mountPath: /var/jenkins_home
      volumes:
      - name: jhome
        persistentVolumeClaim:
          claimName: jenkins-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: mjallouli-project1
spec:
  # Mets "LoadBalancer" si tu veux une IP publique directe (Azure)
  type: LoadBalancer
  selector:
    app: jenkins
  ports:
  - name: http
    port: 80
    targetPort: 8080
